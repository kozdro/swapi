{"version":3,"sources":["components/Cart/Cart.js","components/Header/Header.js","components/StarshipsList/Starship/Input/Input.js","components/StarshipsList/Starship/Starship.js","components/StarshipsList/StarshipsList.js","App.js","reportWebVitals.js","index.js"],"names":["Cart","props","className","quantity","Header","Input","useState","value","setValue","onChange","e","target","type","min","onClick","parseInt","Starship","starships","map","url","name","manufacturer","cost_in_credits","Object","values","includes","StarshipList","bordercolor","frame","rules","span","App","setStarships","setQuantity","useEffect","fetch","then","res","json","data","results","i","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAGe,SAASA,EAAKC,GAC3B,OACE,sBAAKC,UAAU,eAAf,UACE,mBAAGA,UAAU,yBACb,sBAAMA,UAAU,WAAhB,SAA4BD,EAAME,WAClC,wC,MCLS,SAASC,EAAOH,GAC7B,OACE,wBAAQC,UAAU,SAAlB,SACE,cAAC,EAAD,CAAMC,SAAUF,EAAME,aCsBbE,MA1Bf,SAAeJ,GACb,MAA0BK,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAMA,OACE,qCACE,uBACEC,SAPe,SAACC,GACpBF,EAASE,EAAEC,OAAOJ,QAOdA,MAAOA,EACPL,UAAU,QACVU,KAAK,SACLC,IAAI,MAEN,wBACEC,QAAS,kBAAMb,EAAMa,QAAQC,SAASR,KACtCL,UAAU,UAFZ,qB,MCYSc,MA1Bf,SAAkBf,GAChB,OACE,gCACGA,EAAMgB,UAAUC,KAAI,gBAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,gBAA5B,OACnB,+BACE,6BAAKF,IACL,6BAAKC,IACJE,OAAOC,OAAOF,GAAiBG,SAAS,KACvC,qCACE,6BAAKH,IACL,kDAGF,qCACE,6BAAKA,IACL,6BACE,cAAC,EAAD,CAAOR,QAASb,EAAMa,iBAZrBK,S,MCLF,SAASO,EAAazB,GACnC,OACE,sBAAKC,UAAU,OAAf,UACE,gDACA,qBAAKA,UAAU,gBAAf,SACE,wBAAOyB,YAAY,QAAQC,MAAM,OAAOC,MAAM,OAA9C,UACE,0BAAUC,KAAK,MACf,gCACE,+BACE,+CACA,8CACA,uCACA,+CAGJ,cAAC,EAAD,CACEb,UAAWhB,EAAMgB,UACjBH,QAASb,EAAMa,kB,MCWZiB,MAxBf,WACE,MAAkCzB,mBAAS,IAA3C,mBAAOW,EAAP,KAAkBe,EAAlB,KACA,EAAgC1B,mBAAS,GAAzC,mBAAOH,EAAP,KAAiB8B,EAAjB,KAcA,OAZAC,qBAAU,WACRC,MAPQ,oCAQLC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLP,EAAaO,EAAKC,cAErB,IAOD,qCACE,cAAC,EAAD,CAAQrC,SAAUA,IAClB,cAAC,EAAD,CAAec,UAAWA,EAAWH,QAPrB,SAAC2B,GACnBR,EAAYlB,SAASZ,EAAWsC,WCRrBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b4b99417.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Cart.css\";\r\n\r\nexport default function Cart(props) {\r\n  return (\r\n    <div className=\"cart-wrapper\">\r\n      <i className=\"fas fa-shopping-cart\"></i>\r\n      <span className=\"quantity\">{props.quantity}</span>\r\n      <p>Cart</p>\r\n    </div>\r\n  );\r\n}\r\n","import Cart from \"../Cart/Cart\";\r\nimport \"./Header.css\";\r\n\r\nexport default function Header(props) {\r\n  return (\r\n    <header className=\"header\">\r\n      <Cart quantity={props.quantity} />\r\n    </header>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nfunction Input(props) {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        onChange={handleChange}\r\n        value={value}\r\n        className=\"input\"\r\n        type=\"number\"\r\n        min=\"0\"\r\n      />\r\n      <button\r\n        onClick={() => props.onClick(parseInt(value))}\r\n        className=\"add-btn\"\r\n      >\r\n        Add\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport Input from \"./Input/Input\";\r\nimport \"./Starship.css\";\r\n\r\nfunction Starship(props) {\r\n  return (\r\n    <tbody>\r\n      {props.starships.map(({ url, name, manufacturer, cost_in_credits }) => (\r\n        <tr key={url}>\r\n          <td>{name}</td>\r\n          <td>{manufacturer}</td>\r\n          {Object.values(cost_in_credits).includes(\"u\") ? (\r\n            <>\r\n              <td>{cost_in_credits}</td>\r\n              <td>not available</td>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <td>{cost_in_credits}</td>\r\n              <td>\r\n                <Input onClick={props.onClick} />\r\n              </td>\r\n            </>\r\n          )}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n}\r\n\r\nexport default Starship;\r\n","import Starship from \"./Starship/Starship\";\r\nimport \"./StarshipsList.css\";\r\n\r\nexport default function StarshipList(props) {\r\n  return (\r\n    <div className=\"main\">\r\n      <h1>Starships List</h1>\r\n      <div className=\"starship-list\">\r\n        <table bordercolor=\"white\" frame=\"void\" rules=\"rows\">\r\n          <colgroup span=\"4\"></colgroup>\r\n          <thead>\r\n            <tr>\r\n              <th>Starship name</th>\r\n              <th>Manufacturer</th>\r\n              <th>Price</th>\r\n              <th>Quantity</th>\r\n            </tr>\r\n          </thead>\r\n          <Starship\r\n            starships={props.starships}\r\n            onClick={props.onClick}\r\n          />\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\nimport Header from \"./components/Header/Header\";\nimport StarshipsList from \"./components/StarshipsList/StarshipsList\";\nimport \"./App.css\";\n\nconst api = \"https://swapi.dev/api/starships/\";\n\nfunction App() {\n  const [starships, setStarships] = useState([]);\n  const [quantity, setQuantity] = useState(0);\n\n  useEffect(() => {\n    fetch(api)\n      .then((res) => res.json())\n      .then((data) => {\n        setStarships(data.results);\n      });\n  }, []);\n\n  const handleClick = (i) => {\n    setQuantity(parseInt(quantity + i));\n  };\n\n  return (\n    <>\n      <Header quantity={quantity} />\n      <StarshipsList starships={starships} onClick={handleClick} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}